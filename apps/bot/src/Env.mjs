// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Dotenv from "dotenv";
import * as FindUp from "find-up";
import * as Core__Option from "@rescript/core/src/Core__Option.mjs";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";

var EnvError = /* @__PURE__ */Caml_exceptions.create("Env.EnvError");

function createEnv() {
  var envFile = Core__Option.flatMap(process.env, (function (__x) {
          return __x["ENV_FILE"];
        }));
  var path = envFile !== undefined ? FindUp.findUpSync(envFile, undefined) : FindUp.findUpSync(".env.local", undefined);
  Dotenv.config({
        path: path
      });
}

function env(name) {
  var value = Core__Option.flatMap(process.env, (function (__x) {
          return __x[name];
        }));
  if (value !== undefined) {
    return {
            TAG: "Ok",
            _0: value
          };
  } else {
    return {
            TAG: "Error",
            _0: "Environment variable " + name + " is missing"
          };
  }
}

function getConfig() {
  var match = env("DISCORD_API_TOKEN");
  var match$1 = env("DISCORD_CLIENT_ID");
  var match$2 = env("UUID_NAMESPACE");
  var match$3 = env("GIST_ID");
  var match$4 = env("GITHUB_ACCESS_TOKEN");
  var match$5 = env("DISCORD_LOG_CHANNEL_ID");
  if (match.TAG === "Ok") {
    if (match$1.TAG === "Ok") {
      if (match$2.TAG === "Ok") {
        if (match$3.TAG === "Ok") {
          if (match$4.TAG === "Ok") {
            if (match$5.TAG === "Ok") {
              return {
                      TAG: "Ok",
                      _0: {
                        discordApiToken: match._0,
                        discordClientId: match$1._0,
                        uuidNamespace: match$2._0,
                        gistId: match$3._0,
                        githubAccessToken: match$4._0,
                        discordLogChannelId: match$5._0
                      }
                    };
            } else {
              return match$5;
            }
          } else {
            return match$4;
          }
        } else {
          return match$3;
        }
      } else {
        return match$2;
      }
    } else {
      return match$1;
    }
  } else {
    return match;
  }
}

export {
  EnvError ,
  createEnv ,
  env ,
  getConfig ,
}
/* dotenv Not a pure module */
