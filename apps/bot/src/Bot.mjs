// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Env from "./Env.mjs";
import * as Curry from "../../../node_modules/rescript/lib/es6/curry.js";
import * as DiscordJs from "discord.js";
import * as Commands_Help from "./commands/Commands_Help.mjs";
import * as Caml_exceptions from "../../../node_modules/rescript/lib/es6/caml_exceptions.js";
import * as Commands_Verify from "./commands/Commands_Verify.mjs";
import * as Parser_DetectHandler from "./parser/Parser_DetectHandler.mjs";
import * as UpdateOrReadGistMjs from "./updateOrReadGist.mjs";

var RequestHandlerError = /* @__PURE__ */Caml_exceptions.create("Bot.RequestHandlerError");

function updateGist(prim0, prim1) {
  return UpdateOrReadGistMjs.updateGist(prim0, prim1);
}

Env.createEnv(undefined);

var config = Env.getConfig(undefined);

var options = {
  intents: [
    "GUILDS",
    "GUILD_MESSAGES"
  ]
};

var client = new DiscordJs.Client(options);

var commands = new DiscordJs.Collection();

commands.set(Commands_Help.data.name, {
        data: Commands_Help.data,
        execute: Commands_Help.execute
      }).set(Commands_Verify.data.name, {
      data: Commands_Verify.data,
      execute: Commands_Verify.execute
    });

function updateGistOnGuildCreate(guild) {
  return UpdateOrReadGistMjs.updateGist(guild.id, {
              name: guild.name,
              role: "Verified"
            });
}

function onGuildCreate(guild) {
  var roleManager = guild.roles;
  var createRoleOptions = {
    data: {
      name: "Verified",
      color: "ORANGE"
    },
    reason: "Verify users with BrightID"
  };
  roleManager.create(createRoleOptions);
  updateGistOnGuildCreate(guild);
  
}

function onMessage(message) {
  var author = message.author;
  var isBot = author.bot;
  if (isBot) {
    return ;
  }
  var guildMember = message.member;
  var handler = Parser_DetectHandler.detectHandler(message);
  if (handler !== undefined) {
    Curry._3(handler, guildMember, client, message);
  } else {
    message.reply("Could not find the requested command");
    console.error({
          RE_EXN_ID: RequestHandlerError,
          date: Date.now(),
          message: "Could not find the requested command"
        });
  }
  
}

function onInteraction(interaction) {
  if (interaction.isCommand()) {
    var commandName = interaction.commandName;
    var command = commands.get(commandName);
    if (command == null) {
      console.error("Bot.res: Command not found");
    } else {
      Curry._1(command.execute, interaction);
    }
    return ;
  }
  console.log("Not a command");
  
}

client.on("ready", (function (param) {
        console.log("Logged In");
        
      }));

client.on("guildCreate", onGuildCreate);

client.on("messageCreate", onMessage);

client.on("interactionCreate", onInteraction);

if (config.TAG === /* Ok */0) {
  client.login(config._0.discordApiToken);
} else {
  console.log(config._0);
}

export {
  RequestHandlerError ,
  updateGist ,
  config ,
  options ,
  client ,
  commands ,
  updateGistOnGuildCreate ,
  onGuildCreate ,
  onMessage ,
  onInteraction ,
  
}
/*  Not a pure module */
