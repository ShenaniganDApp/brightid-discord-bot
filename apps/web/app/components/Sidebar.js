// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Remix from "remix";
import * as Belt_Array from "../../../../node_modules/rescript/lib/es6/belt_Array.js";
import * as ReactProSidebar from "react-pro-sidebar";
import * as DiscordLogoutButton from "./DiscordLogoutButton.js";
import * as Rainbowkit from "@rainbow-me/rainbowkit";

var ConnectButton = {};

function Sidebar(Props) {
  var toggled = Props.toggled;
  var handleToggleSidebar = Props.handleToggleSidebar;
  var user = Props.user;
  var fetcher = Remix.useFetcher();
  var icon = function (param) {
    var icon$1 = param.icon;
    if (icon$1 !== undefined) {
      return "https://cdn.discordapp.com/icons/" + param.id + "/" + icon$1 + ".png";
    } else {
      return "/assets/brightid_logo_white.png";
    }
  };
  React.useEffect((function () {
          if (fetcher.type === "init") {
            fetcher.load("/Root_FetchGuilds");
          }
          
        }), [fetcher]);
  var sidebarElements;
  if (user == null) {
    sidebarElements = React.createElement(React.Fragment, undefined);
  } else {
    var match = fetcher.type;
    if (match === "done") {
      var data = fetcher.data;
      if (data == null) {
        sidebarElements = React.createElement("p", {
              className: "text-white"
            }, "No Guilds");
      } else {
        var match$1 = data.guilds.length;
        sidebarElements = match$1 !== 0 ? Belt_Array.mapWithIndex(data.guilds, (function (i, guild) {
                  return React.createElement(ReactProSidebar.Menu, {
                              children: React.createElement(ReactProSidebar.MenuItem, {
                                    children: React.createElement(Remix.Link, {
                                          className: "font-semibold text-xl",
                                          prefetch: "intent",
                                          to: "/guilds/" + guild.id + "",
                                          children: guild.name
                                        }),
                                    className: "bg-extraDark",
                                    icon: React.createElement("img", {
                                          className: " bg-extraDark rounded-lg border-1 border-white",
                                          src: icon(guild)
                                        })
                                  }),
                              iconShape: "square",
                              key: String(i + 1 | 0)
                            });
                })) : React.createElement("p", {
                className: "text-white"
              }, "No Guilds");
      }
    } else {
      sidebarElements = Belt_Array.map(Belt_Array.range(0, 4), (function (i) {
              return React.createElement(ReactProSidebar.Menu, {
                          children: React.createElement(ReactProSidebar.MenuItem, {
                                children: React.createElement("div", {
                                      className: "flex flex-col space-y-3"
                                    }, React.createElement("div", {
                                          className: "w-36 bg-gray-300 h-6 rounded-md "
                                        })),
                                className: "flex animate-pulse flex-row h-full bg-extraDark ",
                                icon: React.createElement("img", {
                                      className: " bg-extraDark  rounded-lg",
                                      src: "/assets/brightid_logo_white.png"
                                    })
                              }),
                          iconShape: "square",
                          key: String(i + 1 | 0)
                        });
            }));
    }
  }
  return React.createElement(ReactProSidebar.ProSidebar, {
              children: null,
              className: "bg-dark ",
              breakPoint: "md",
              onToggle: handleToggleSidebar,
              toggled: toggled
            }, React.createElement(ReactProSidebar.SidebarHeader, {
                  children: React.createElement(Rainbowkit.ConnectButton, {}),
                  className: "p-4 flex justify-center items-center top-0 sticky bg-dark z-10 "
                }), React.createElement(ReactProSidebar.SidebarContent, {
                  children: null,
                  className: "no-scrollbar"
                }, React.createElement(ReactProSidebar.Menu, {
                      children: React.createElement(ReactProSidebar.MenuItem, {
                            children: React.createElement(DiscordLogoutButton.make, {
                                  label: "Logout of Discord"
                                })
                          }),
                      iconShape: "square",
                      key: String(0)
                    }), sidebarElements), React.createElement(ReactProSidebar.SidebarFooter, {
                  children: React.createElement(Remix.Link, {
                        to: "",
                        children: React.createElement(ReactProSidebar.MenuItem, {
                              children: React.createElement("img", {
                                    src: "/assets/brightid_reversed.svg"
                                  })
                            })
                      }),
                  className: "bg-extraDark bottom-0 sticky bg-dark"
                }));
}

var make = Sidebar;

export {
  ConnectButton ,
  make ,
}
/* react Not a pure module */
