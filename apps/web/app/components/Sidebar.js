// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "../../../../node_modules/rescript/lib/es6/belt_Array.js";
import * as Caml_option from "../../../../node_modules/rescript/lib/es6/caml_option.js";
import * as InviteButton from "./InviteButton.js";
import * as React from "@remix-run/react";
import * as ReactProSidebar from "react-pro-sidebar";
import * as JsxRuntime from "react/jsx-runtime";

var ConnectButton = {};

function Sidebar(props) {
  var guilds = props.guilds;
  var icon = function (param) {
    var icon$1 = param.icon;
    if (icon$1 !== undefined) {
      return "https://cdn.discordapp.com/icons/" + param.id + "/" + icon$1 + ".png";
    } else {
      return "/assets/brightid_logo_white.png";
    }
  };
  var sidebarElements;
  if (props.loadingGuilds) {
    var intersection = guilds.map(function (guild) {
          return JsxRuntime.jsx(ReactProSidebar.Menu, {
                      children: Caml_option.some(JsxRuntime.jsx(ReactProSidebar.MenuItem, {
                                children: Caml_option.some(JsxRuntime.jsx(React.Link, {
                                          className: "font-semibold text-xl",
                                          prefetch: "intent",
                                          to: "/guilds/" + guild.id + "",
                                          children: guild.name
                                        })),
                                className: "bg-extraDark hover:bg-dark",
                                icon: Caml_option.some(JsxRuntime.jsx("img", {
                                          className: " bg-extraDark rounded-lg border-1 border-white",
                                          src: icon(guild)
                                        }))
                              })),
                      iconShape: "square"
                    }, guild.id);
        });
    var loading = Belt_Array.range(0, 4).map(function (i) {
          return JsxRuntime.jsx(ReactProSidebar.Menu, {
                      children: Caml_option.some(JsxRuntime.jsx(ReactProSidebar.MenuItem, {
                                children: Caml_option.some(JsxRuntime.jsx("div", {
                                          children: JsxRuntime.jsx("div", {
                                                className: "w-36 bg-gray-300 h-6 rounded-md "
                                              }),
                                          className: "flex flex-col space-y-3"
                                        })),
                                className: "flex animate-pulse flex-row h-full bg-extraDark ",
                                icon: Caml_option.some(JsxRuntime.jsx("img", {
                                          className: " bg-extraDark  rounded-lg",
                                          src: "/assets/brightid_logo_white.png"
                                        }))
                              })),
                      iconShape: "square"
                    }, (i + 1 | 0).toString());
        });
    sidebarElements = intersection.concat(loading);
  } else if (guilds.length !== 0) {
    var match = guilds.length;
    sidebarElements = match !== 0 ? guilds.map(function (guild) {
            return JsxRuntime.jsx(ReactProSidebar.Menu, {
                        children: Caml_option.some(JsxRuntime.jsx(ReactProSidebar.MenuItem, {
                                  children: Caml_option.some(JsxRuntime.jsx(React.Link, {
                                            className: "font-semibold text-xl",
                                            prefetch: "intent",
                                            to: "/guilds/" + guild.id + "",
                                            children: guild.name
                                          })),
                                  className: "bg-extraDark",
                                  icon: Caml_option.some(JsxRuntime.jsx("img", {
                                            className: " bg-extraDark rounded-lg border-1 border-white",
                                            src: icon(guild)
                                          }))
                                })),
                        iconShape: "square"
                      }, guild.id);
          }) : JsxRuntime.jsx("p", {
            children: "No Guilds",
            className: "text-white"
          });
  } else {
    sidebarElements = JsxRuntime.jsx("p", {
          children: "Couldn't Load Discord Servers",
          className: "text-white"
        });
  }
  return JsxRuntime.jsxs(ReactProSidebar.ProSidebar, {
              children: [
                JsxRuntime.jsx(ReactProSidebar.SidebarHeader, {
                      children: Caml_option.some(JsxRuntime.jsx(React.Link, {
                                to: "",
                                children: JsxRuntime.jsx("img", {
                                      className: "w-40",
                                      src: "/assets/brightid_reversed.svg"
                                    })
                              })),
                      className: "flex top-0 sticky bg-inherit z-10 justify-center items-center border-b border-b-black backdrop-blur-3xl "
                    }),
                JsxRuntime.jsxs(ReactProSidebar.SidebarContent, {
                      children: [
                        JsxRuntime.jsx(ReactProSidebar.Menu, {
                              iconShape: "square"
                            }, String(0)),
                        sidebarElements
                      ],
                      className: " bg-extraDark z-[-1]"
                    }),
                JsxRuntime.jsx(ReactProSidebar.SidebarFooter, {
                      children: Caml_option.some(JsxRuntime.jsxs("div", {
                                children: [
                                  JsxRuntime.jsx("p", {
                                        children: "Your server is not on the list?",
                                        className: "text-white font-poppins"
                                      }),
                                  JsxRuntime.jsx(InviteButton.make, {})
                                ],
                                className: " flex flex-col justify-around items-center py-8 gap-3"
                              })),
                      className: "bg-dark bottom-0 sticky list-none"
                    })
              ],
              className: "bg-transparent",
              breakPoint: "md",
              onToggle: props.handleIsSidebarVisible,
              toggled: props.isSidebarVisible
            });
}

var make = Sidebar;

export {
  ConnectButton ,
  make ,
}
/* InviteButton Not a pure module */
