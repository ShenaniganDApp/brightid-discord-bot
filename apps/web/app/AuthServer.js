// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Remix from "remix";
import * as RemixAuth from "remix-auth";
import * as RemixAuthSocials from "remix-auth-socials";

var clientID = process.env.DISCORD_CLIENT_ID;

var clientSecret = process.env.DISCORD_CLIENT_SECRET;

var baseUrl = process.env.BASE_URL;

var uuidNamespace = process.env.UUID_NAMESPACE;

var cookieOptions = {
  httpOnly: true,
  path: "/",
  sameSite: "lax",
  secure: process.env.NODE_ENV === "production",
  secrets: [uuidNamespace]
};

var cookie = Remix.createCookie("__session", cookieOptions);

var sessionStorage = Remix.createCookieSessionStorage({
      cookie: cookie
    });

var authenticator = new RemixAuth.Authenticator(sessionStorage);

var discordStrategy = new RemixAuthSocials.DiscordStrategy({
      clientID: clientID,
      clientSecret: clientSecret,
      callbackURL: baseUrl + "/auth/discord/callback",
      scope: [
        "identify",
        "guilds",
        "guilds.join"
      ]
    }, (function (param) {
        return Promise.resolve({
                    accessToken: param.accessToken,
                    profile: param.profile
                  });
      }));

authenticator.use(discordStrategy);

export {
  clientID ,
  clientSecret ,
  baseUrl ,
  uuidNamespace ,
  cookieOptions ,
  cookie ,
  sessionStorage ,
  authenticator ,
  discordStrategy ,
}
/* clientID Not a pure module */
