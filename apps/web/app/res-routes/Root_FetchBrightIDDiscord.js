// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Uuid from "uuid";
import * as AuthServer from "../AuthServer.js";
import * as Core__JSON from "../../../../node_modules/@rescript/core/src/Core__JSON.js";
import * as Core__Option from "../../../../node_modules/@rescript/core/src/Core__Option.js";
import * as Brightid_sdk from "brightid_sdk";
import * as Webapi__Fetch from "../../../../node_modules/rescript-webapi/src/Webapi/Webapi__Fetch.js";
import * as Core__Nullable from "../../../../node_modules/@rescript/core/src/Core__Nullable.js";

var context = "Discord";

var brightIdVerificationEndpoint = "https://app.brightid.org/node/v5/verifications/Discord";

var brightIdAppEndpoint = "https://app.brightid.org/node/v5/apps/Discord";

async function loader(param) {
  var uuidNamespace = process.env.UUID_NAMESPACE;
  var init = Webapi__Fetch.RequestInit.make(/* Get */0, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(undefined);
  var req = new Request(brightIdVerificationEndpoint, init);
  var res = await fetch(req);
  var json = await res.json();
  var data = Core__Option.getExn(Core__JSON.Decode.object(json)["data"]);
  var verificationCount = Core__Nullable.fromOption(Core__Option.flatMap(Core__JSON.Decode.object(data)["count"], Core__JSON.Decode.$$float));
  var req$1 = new Request(brightIdAppEndpoint, init);
  var res$1 = await fetch(req$1);
  var json$1 = await res$1.json();
  var data$1 = Core__Option.getExn(Core__JSON.Decode.object(json$1)["data"]);
  var unusedSponsorships = Core__Nullable.fromOption(Core__Option.flatMap(Core__JSON.Decode.object(data$1)["unusedSponsorships"], Core__JSON.Decode.$$float));
  var assignedSponsorships = Core__Nullable.fromOption(Core__Option.flatMap(Core__JSON.Decode.object(data$1)["assignedSponsorships"], Core__JSON.Decode.$$float));
  var user = await AuthServer.authenticator.isAuthenticated(param.request);
  if (user == null) {
    return {
            user: null,
            verificationCount: verificationCount,
            unusedSponsorships: unusedSponsorships,
            assignedSponsorships: assignedSponsorships,
            verifyStatus: /* NotVerified */2
          };
  }
  var userId = user.profile.id;
  var contextId = Uuid.v5(userId, uuidNamespace);
  var json$2 = await Brightid_sdk.verifyContextId(context, contextId, undefined);
  var unique = Core__Option.flatMap(Core__JSON.Decode.object(json$2)["unique"], Core__JSON.Decode.bool);
  var verifyStatus;
  if (unique !== undefined) {
    verifyStatus = /* Unique */4;
  } else {
    var data$2 = Core__Option.getExn(Core__JSON.Decode.object(json$2)["data"]);
    var errorNum = Core__Option.flatMap(Core__JSON.Decode.object(data$2)["errorNum"], Core__JSON.Decode.$$float);
    verifyStatus = errorNum !== undefined ? (
        errorNum !== 2 ? (
            errorNum !== 3 ? (
                errorNum !== 4 ? /* Unknown */0 : /* NotSponsored */3
              ) : /* NotVerified */2
          ) : /* NotLinked */1
      ) : /* Unknown */0;
  }
  return {
          user: user,
          verificationCount: verificationCount,
          unusedSponsorships: unusedSponsorships,
          assignedSponsorships: assignedSponsorships,
          verifyStatus: verifyStatus
        };
}

export {
  context ,
  brightIdVerificationEndpoint ,
  brightIdAppEndpoint ,
  loader ,
}
/* uuid Not a pure module */
