// Generated by ReScript, PLEASE EDIT WITH CARE

import * as AuthServer from "../AuthServer.js";
import * as Caml_option from "../../../../node_modules/rescript/lib/es6/caml_option.js";
import * as Core__Promise from "../../../../node_modules/@rescript/core/src/Core__Promise.js";
import * as DiscordServer from "../DiscordServer.js";

function loader(param) {
  var request = param.request;
  var after = new URL(request.url).searchParams.get("after");
  var after$1 = (after == null) ? undefined : Caml_option.some(after);
  return Core__Promise.$$catch(AuthServer.authenticator.isAuthenticated(request).then(function (user) {
                  if (user == null) {
                    return Promise.resolve({
                                user: null,
                                userGuilds: [],
                                botGuilds: [],
                                after: undefined,
                                rateLimited: false
                              });
                  } else {
                    return DiscordServer.fetchUserGuilds(user).then(function (userGuilds) {
                                return DiscordServer.fetchBotGuildsLimit(after$1).then(function (param) {
                                            return Promise.resolve({
                                                        user: user,
                                                        userGuilds: userGuilds,
                                                        botGuilds: param.guilds,
                                                        after: param.after,
                                                        rateLimited: false
                                                      });
                                          });
                              });
                  }
                }), (function (error) {
                if (error.RE_EXN_ID === DiscordServer.DiscordRateLimited) {
                  return Promise.resolve({
                              user: null,
                              userGuilds: [],
                              botGuilds: [],
                              after: undefined,
                              rateLimited: true
                            });
                } else {
                  return Promise.resolve({
                              user: null,
                              userGuilds: [],
                              botGuilds: [],
                              after: undefined,
                              rateLimited: false
                            });
                }
              }));
}

export {
  loader ,
}
/* AuthServer Not a pure module */
