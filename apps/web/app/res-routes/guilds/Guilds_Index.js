// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "../../../../../node_modules/rescript/lib/es6/curry.js";
import * as React from "react";
import * as Remix from "remix";
import * as Belt_Array from "../../../../../node_modules/rescript/lib/es6/belt_Array.js";
import * as AdminButton from "../../components/AdminButton.js";
import * as Belt_Option from "../../../../../node_modules/rescript/lib/es6/belt_Option.js";
import * as SidebarToggle from "../../components/SidebarToggle.js";
import * as ReactHotToast from "react-hot-toast";
import ReactHotToast$1 from "react-hot-toast";
import * as Rainbowkit from "@rainbow-me/rainbowkit";

var state = {
  guild: undefined,
  isAdmin: false,
  brightIdGuild: undefined,
  loading: true,
  oauthGuild: undefined
};

function reducer(state, action) {
  switch (action.TAG | 0) {
    case /* SetGuild */0 :
        return {
                guild: action._0,
                isAdmin: state.isAdmin,
                brightIdGuild: state.brightIdGuild,
                loading: state.loading,
                oauthGuild: state.oauthGuild
              };
    case /* SetIsAdmin */1 :
        return {
                guild: state.guild,
                isAdmin: action._0,
                brightIdGuild: state.brightIdGuild,
                loading: state.loading,
                oauthGuild: state.oauthGuild
              };
    case /* SetBrightIdGuild */2 :
        return {
                guild: state.guild,
                isAdmin: state.isAdmin,
                brightIdGuild: action._0,
                loading: state.loading,
                oauthGuild: state.oauthGuild
              };
    case /* SetLoading */3 :
        return {
                guild: state.guild,
                isAdmin: state.isAdmin,
                brightIdGuild: state.brightIdGuild,
                loading: action._0,
                oauthGuild: state.oauthGuild
              };
    case /* SetOAuthGuild */4 :
        return {
                guild: state.guild,
                isAdmin: state.isAdmin,
                brightIdGuild: state.brightIdGuild,
                loading: state.loading,
                oauthGuild: action._0
              };
    
  }
}

function $$default(param) {
  var match = Remix.useParams();
  var guildId = match.guildId;
  var context = Remix.useOutletContext();
  var fetcher = Remix.useFetcher();
  var match$1 = React.useReducer(reducer, state);
  var dispatch = match$1[1];
  var state$1 = match$1[0];
  React.useEffect((function () {
          var match = fetcher.type;
          switch (match) {
            case "done" :
                var data = fetcher.data;
                if (data == null) {
                  Curry._1(dispatch, {
                        TAG: /* SetLoading */3,
                        _0: false
                      });
                } else {
                  console.log("data: ", data);
                  Curry._1(dispatch, {
                        TAG: /* SetGuild */0,
                        _0: data.guild
                      });
                  Curry._1(dispatch, {
                        TAG: /* SetIsAdmin */1,
                        _0: data.isAdmin
                      });
                  Curry._1(dispatch, {
                        TAG: /* SetBrightIdGuild */2,
                        _0: data.brightIdGuild
                      });
                  Curry._1(dispatch, {
                        TAG: /* SetLoading */3,
                        _0: false
                      });
                }
                break;
            case "init" :
                fetcher.load("/guilds/" + guildId + "/Guilds_FetchGuild");
                console.log(fetcher);
                Curry._1(dispatch, {
                      TAG: /* SetLoading */3,
                      _0: true
                    });
                break;
            default:
              
          }
        }), [fetcher]);
  React.useEffect((function () {
          var contextGuilds = context.guilds;
          var index = Belt_Array.getIndexBy(contextGuilds, (function (guild) {
                  return guild.id === guildId;
                }));
          if (index !== undefined) {
            Curry._1(dispatch, {
                  TAG: /* SetOAuthGuild */4,
                  _0: Belt_Array.get(contextGuilds, index)
                });
          }
          
        }), [context]);
  var guild = state$1.oauthGuild;
  var guildHeader = guild !== undefined ? React.createElement("div", {
          className: "flex gap-6 w-full justify-start items-center"
        }, React.createElement("img", {
              className: "rounded-full h-24",
              src: Belt_Option.getWithDefault(Belt_Option.map(guild.icon, (function (icon) {
                          return "https://cdn.discordapp.com/icons/" + guild.id + "/" + icon + ".png";
                        })), "")
            }), React.createElement("p", {
              className: "text-4xl font-bold text-white"
            }, guild.name), state$1.isAdmin ? React.createElement(AdminButton.make, {
                guildId: guildId
              }) : React.createElement(React.Fragment, undefined)) : React.createElement("div", {
          className: "text-2xl md:text-3xl font-semibold text-white"
        });
  React.useEffect((function () {
          if (context.rateLimited) {
            ReactHotToast$1.error("The bot is being rate limited. Please try again later", undefined);
          }
          var match = state$1.isAdmin;
          if (match) {
            var match$1 = state$1.brightIdGuild;
            var exit = 0;
            if (!(match$1 !== undefined && match$1.sponsorshipAddress !== undefined)) {
              exit = 1;
            }
            if (exit === 1) {
              ReactHotToast$1((function (t) {
                      return React.createElement("span", {
                                  className: "flex flex-col font-bold bg-dark outline-2 border-brightid text-white cursor-pointer",
                                  onClick: (function (param) {
                                      t.dismiss("sponsor");
                                    })
                                }, "This server is not setup to sponsor its members. Start sponsoring ➡️");
                    }), {
                    duration: 100000,
                    icon: "⚠️",
                    id: "sponsor",
                    position: "bottom-right",
                    style: {
                      background: "transparent",
                      border: "2px solid ",
                      "border-color": "#ed7a5c"
                    }
                  });
            }
            
          }
          
        }), []);
  return React.createElement("div", {
              className: "flex-1 p-4"
            }, React.createElement(ReactHotToast.Toaster, {}), React.createElement("div", {
                  className: "flex flex-col h-screen"
                }, React.createElement("header", {
                      className: "flex flex-row justify-between md:justify-end items-center m-4"
                    }, React.createElement(SidebarToggle.make, {
                          handleToggleSidebar: context.handleToggleSidebar
                        }), React.createElement("div", {
                          className: "flex flex-col md:flex-row gap-2 items-center justify-center"
                        }, React.createElement(Rainbowkit.ConnectButton, {
                              className: "h-full"
                            }))), guildHeader, React.createElement("div", {
                      className: "flex flex-1 flex-col  justify-around items-center text-center"
                    }, React.createElement("section", {
                          className: "width-full flex flex-col md:flex-row justify-around items-center w-full"
                        }, React.createElement("div", {
                              className: "flex flex-col rounded-xl justify-around items-center text-center h-32 w-60 md:h-48 m-2 border-2 border-white border-solid bg-extraDark"
                            }, React.createElement("div", {
                                  className: "text-3xl font-bold text-white"
                                }, "Verified Server Members"), React.createElement("div", {
                                  className: "text-3xl font-semibold text-transparent bg-clip-text bg-gradient-to-l from-brightid to-white"
                                }, "1000")), React.createElement("div", {
                              className: "flex flex-col  rounded-xl justify-around items-center text-center h-32 w-60 md:h-48 m-2 border-2 border-white border-solid bg-extraDark"
                            }, React.createElement("div", {
                                  className: "text-3xl font-bold text-white"
                                }, "Users Sponsored"), React.createElement("div", {
                                  className: "text-3xl font-semibold text-transparent bg-clip-text bg-gradient-to-l from-brightid to-white"
                                }, "125")), React.createElement("div", {
                              className: "flex flex-col rounded-xl justify-around items-center text-center h-32 w-60 md:h-48 m-2 border-2 border-white border-solid bg-extraDark"
                            }, React.createElement("div", {
                                  className: "text-3xl font-bold text-white"
                                }, " Avaliable Sponsors"), React.createElement("div", {
                                  className: "text-3xl font-semibold text-transparent bg-clip-text bg-gradient-to-l from-brightid to-white"
                                }, "0"))))));
}

export {
  state ,
  reducer ,
  $$default ,
  $$default as default,
}
/* react Not a pure module */
