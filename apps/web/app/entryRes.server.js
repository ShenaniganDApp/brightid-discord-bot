// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "../../../node_modules/rescript/lib/es6/curry.js";
import Isbot from "isbot";
import * as Stream from "stream";
import * as Caml_option from "../../../node_modules/rescript/lib/es6/caml_option.js";
import * as Core__Option from "../../../node_modules/@rescript/core/src/Core__Option.js";
import * as React from "@remix-run/react";
import * as Server from "react-dom/server";
import * as JsxRuntime from "react/jsx-runtime";

var ResponseInit = {};

var BodyInit = {};

var ReactDOMServer = {};

function $$default(request, responseStatusCode, responseHeaders, remixContext) {
  var maybeCallbackName = Core__Option.map(Core__Option.map(Caml_option.null_to_opt(request.headers.get("User-Agent")), (function (prim) {
              return Isbot(prim);
            })), (function (onAllReady) {
          if (onAllReady) {
            return "onAllReady";
          } else {
            return "onShellReady";
          }
        }));
  return new Promise((function (resolve, reject) {
                var onAllReadyOptions = function (pipe) {
                  var callbackFn = function (param) {
                    var body = new Stream.PassThrough();
                    request.headers.set("Content-Type", "text/html");
                    var response = new Response(body, {
                          status: responseStatusCode,
                          headers: responseHeaders
                        });
                    resolve(response);
                    Curry._1(pipe, body);
                  };
                  return {
                          onAllReady: callbackFn,
                          onShellError: (function (err) {
                              reject(err);
                            }),
                          onError: (function (err) {
                              console.error(err);
                            })
                        };
                };
                var onShellReadyOptions = function (pipe) {
                  var callbackFn = function (param) {
                    var body = new Stream.PassThrough();
                    request.headers.set("Content-Type", "text/html");
                    var response = new Response(body, {
                          status: responseStatusCode,
                          headers: responseHeaders
                        });
                    resolve(response);
                    Curry._1(pipe, body);
                  };
                  return {
                          onShellReady: callbackFn,
                          onShellError: (function (err) {
                              reject(err);
                            }),
                          onError: (function (err) {
                              console.error(err);
                            })
                        };
                };
                if (Core__Option.getWithDefault(maybeCallbackName, "") === "onAllReady") {
                  var allStream = Server.renderToPipeableStream(JsxRuntime.jsx(React.RemixServer, {
                            context: remixContext,
                            url: request.url
                          }), onAllReadyOptions(allStream.pipe));
                  setTimeout(allStream.abort, 5000);
                  return ;
                }
                if (Core__Option.getWithDefault(maybeCallbackName, "") !== "onShellReady") {
                  return ;
                }
                var match = Server.renderToPipeableStream(JsxRuntime.jsx(React.RemixServer, {
                          context: remixContext,
                          url: request.url
                        }), onShellReadyOptions(pipe));
                setTimeout(match.abort, 5000);
              }));
}

export {
  ResponseInit ,
  BodyInit ,
  ReactDOMServer ,
  $$default ,
  $$default as default,
}
/* isbot Not a pure module */
