// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.mjs";
import * as Env$Utils from "@brightidbot/utils/src/Env.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Gist$Utils from "@brightidbot/utils/src/Gist.mjs";
import * as DiscordJs from "discord.js";
import * as Decode$Shared from "@brightidbot/shared/src/Decode.mjs";
import * as Belt_SetString from "rescript/lib/es6/belt_SetString.js";

Env$Utils.createEnv(undefined);

var envConfig = Env$Utils.getConfig(undefined);

var envConfig$1;

if (envConfig.TAG === /* Ok */0) {
  envConfig$1 = envConfig._0;
} else {
  throw {
        RE_EXN_ID: Env$Utils.EnvError,
        _1: envConfig._0,
        Error: new Error()
      };
}

var discordBotToken = envConfig$1.discordApiToken;

var githubAccessToken = envConfig$1.githubAccessToken;

var id = envConfig$1.gistId;

var config = Gist$Utils.makeGistConfig(id, "guildData.json", githubAccessToken);

var options = {
  intents: [
    "GUILDS",
    "GUILD_MESSAGES"
  ]
};

var client = new DiscordJs.Client(options);

$$Promise.$$catch(client.login(discordBotToken).then(function (param) {
          console.log("Client Started\n");
          return Gist$Utils.ReadGist.content(config, Decode$Shared.Gist.brightIdGuilds).then(function (content) {
                      var gistGuilds = Object.keys(content);
                      var botGuilds = client.guilds.cache;
                      var keys = Belt_SetString.fromArray(Belt_Array.keep(gistGuilds, (function (gistGuild) {
                                  return !botGuilds.has(gistGuild);
                                })));
                      return Gist$Utils.UpdateGist.removeManyEntries(content, keys, config).then(function (param) {
                                    return Promise.resolve((console.log("Removed " + String(Belt_SetString.size(keys)) + " guilds\n             from gist"), undefined));
                                  }).then(function (param) {
                                  client.destroy();
                                  console.log("Finished âœ…");
                                  return Promise.resolve(undefined);
                                });
                    });
        }), (function (e) {
        console.log(e);
        return Promise.resolve(undefined);
      }));

export {
  envConfig$1 as envConfig,
  discordBotToken ,
  githubAccessToken ,
  id ,
  config ,
  options ,
  client ,
}
/*  Not a pure module */
